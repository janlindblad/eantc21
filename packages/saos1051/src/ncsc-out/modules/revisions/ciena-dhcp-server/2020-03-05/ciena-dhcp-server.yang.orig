module ciena-dhcp-server {
  namespace "http://www.ciena.com/dhcpServer/yang/ciena-dhcp-server";
  prefix "cds";

  import ietf-inet-types {
    prefix "inet";
  }
  import ietf-yang-types {
    prefix "yang";
  }
  import openconfig-interfaces {
    prefix "oc-if";
  }

  organization
    "Ciena Corporation";

  contact
    "Web URL: http://www.ciena.com/
     E-mail:  yang@ciena.com
     Postal:  7035 Ridge Road
              Hanover, Maryland 21076
              U.S.A.
     Phone:   +1 800-921-1144
     Fax:     +1 410-694-5750";

  description
    "This YANG module defines DHCP Server Model..

     Copyright (c) 2020 Ciena Corporation.  All rights
     reserved.

     All information contained herein is, and remains
     the property of Ciena Corporation. Dissemination of this
     information or reproduction of this material is strictly
     forbidden unless prior written permission is obtained from
     Ciena Corporation.";

  revision 2020-03-05 {
    description
      "Initial version";
    reference
      "RFC 6020: YANG - A Data Modeling Language for
       the Network Configuration Protocol (NETCONF).
       DHCP server IETF YANG model reference is
       http://www.netconfcentral.org/modules/ietf-dhcp";
  }

  /*--------------------*/
  /*  Types Definition  */
  /*--------------------*/
  typedef allocate-type {
    type enumeration {
      enum automatic {
        description
          "DHCP assigns a permanent IP address to a client";
      }
      enum dynamic {
        description
          "DHCP assigns an IP address to a client
           for a limited period of time";
      }
      enum manual {
        description
          "a client's IP address is assigned by the
           network administrator, and DHCP is used
           simply to convey the assigned address to the client";
      }
    }
    description
      "Mechanisms for IP address allocation";
  }

  typedef dhcp-ip-pool-name-ref {
    type leafref {
      path "/cds:dhcp-server/cds:dhcp-ip-pool/cds:ip-pool-name";
    }
    description
      "Reusable type for by-name reference.
       This type may be used in cases where ability to reference
       a subinterface is not required.";
  }

  grouping server-packet {
    description
      "The packets are sent from server ";
    leaf offer-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPOFFER packets";
    }

    leaf ack-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPACK packets";
    }

    leaf nack-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPNAK packets";
    }
  }  // grouping server-packet

  grouping client-packet {
    description
      "The packets are sent from client ";
    leaf decline-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPDECLINE packets";
    }

    leaf discover-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPDISCOVER packets";
    }

    leaf request-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPREQUEST packets";
    }

    leaf release-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPRELEASE packets";
    }

    leaf inform-packet {
      type uint32;
      config false;
      description
        "Total number of DHCPINFORM packets";
    }
  }  // grouping client-packet

  /*--------------------*/
  /* Configuration Data */
  /*--------------------*/
  container dhcp-server {
    description
      "DHCP server configuration";
    list dhcp-ip-pool {
      key "ip-pool-name";
      description
        "Global IP pool configuration";

      leaf ip-pool-name {
        type string {
          length "1..64";
        }
        description
          "Name of the IP pool";
      }
      leaf interface {
        type oc-if:base-interface-ref;
          description
            "Name of the interface";
      }
      leaf gateway-ip {
        type inet:ipv4-address;
        description
          "IPv4 address of the gateway";
      }
      leaf gateway-mask {
        type inet:ipv4-prefix;
        mandatory "true";
        description
          "Network submask of the gateway";
      }
      leaf lease-time {
        type uint32 {
          range "180..31536000";
        }
        units "seconds";
        description
          "Default network address lease time assigned to DHCP clients";
      }
      leaf domain-name {
        type string {
          length "1..255";
        }
        description
          "Name of the domain";
      }
      list manual-allocation {
        key "mac-address ip-address";
        description
          "Mapping from MAC address to IP address";

        leaf mac-address {
          type yang:mac-address;
          description
            "MAC address of the host";
        }
        leaf ip-address {
          type inet:ipv4-address;
          description
            "IPv4 address of the host";
        }
      }
      list section {
        key "section-index";
        description
          "IPv4 address for the range";
        leaf section-index {
          type uint16 {
            range "0..255";
          }
          description
            "Index of IPv4 address range";
        }
        leaf section-start-ip {
          type inet:ipv4-address;
          mandatory "true";
          description
            "Starting IPv4 Address of a section";
        }
        leaf section-end-ip {
          type inet:ipv4-address;
          description
            "Last IPv4 Address of a section";
        }
      }
      container option {
        description
          "Configuration option";
        leaf dhcp-server-identifier {
          type  inet:ipv4-address;
          description
            "DHCP server identifier";
        }
        leaf domain-name {
          type string {
            length "1..255";
          }
          description
            "Name of the domain";
        }
        leaf domain-name-server {
          type  inet:ipv4-address;
          description
            "IPv4 address of the domain";
        }
      }
    }
  }

  /*--------------------------*/
  /*  Operational State Data  */
  /*--------------------------*/
  container dhcp-server-state {
    config "false";
    description
      "DHCP server state data";

    list dhcp-ip-pool {
      key "ip-pool-name";
      description
        "Global IP pool configuration";

      leaf ip-pool-name {
        type string;
        description
          "Name of an IP pool";
      }
      leaf gateway-ip {
        type inet:ipv4-address;
        description
          "IPv4 address of the gateway";
      }
      leaf gateway-mask {
        type inet:ipv4-prefix;
        description
          "Network submask of the gateway";
      }

      container packet-statistics {
        description
          "Packet statistics";

        container receive {
          description
            "Number of received packets";
            uses client-packet;
        }  // container receive

        container send {
          description
            "Number of sent packets";
          uses server-packet;
        }  // container send
      }  // container packet-statistics

      container hosts {
        description
          "Information of all the clients in the pool";

        list host {
          key "interface";
          description
            "Host status information";

          leaf interface {
            type string; 
            description
              "Name of the interface";
          }
          leaf host-ip {
            type inet:ipv4-address;
            description
              "IPv4 address of the host";
          }
          leaf host-hardware-address {
            type yang:mac-address;
            description
              "MAC address of the host";
          }
          leaf lease {
            type uint32;
            description
              "Default network address lease
               time assigned to DHCP clients";
          }
          leaf type {
            type allocate-type;
            description
              "Mechanisms for IP address allocation";
          }
        }
      }
    }
  }

  rpc clean-dhcp-server-statistics {
    description
      "Clean dhcp server packet statistics";
  }
}
